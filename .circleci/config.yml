version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.13
jobs:
  build:
    docker:
      - image: circleci/node:chakracore-8.10
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-node-dependencies
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: # run tests
          name: run npm test
          command: npm test
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"
      - store_artifacts: # special step to save test results as as artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: reports/junit
          prefix: tests
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: coverage
          prefix: coverage
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: reports/junit
      - run:
          name: package the output
          command: npm run pack
      - run:
          name: copy output to a file with the branchname
          command: mv $(cat package.json | jq -r '.name').zip $(cat package.json | jq -r '.name').$CIRCLE_BRANCH.zip
      - run: ls -alh
      - persist_to_workspace:
          root: /tmp/dir
          paths:
            - *.zip
      - run:
          name: Clean up
          command: npm run cleanup
  aws-cli:
    executor:
      name: aws-cli/default
      python-version: "3.5"
    steps:
      - attach_workspace:
          at: /tmp/dir
      - aws-cli/install
      - aws-cli/configure:
          profile-name: example
      - run: |
          if [[ ! -z $CIRCLE_S3_LAMBDA_BUCKET_NAME ]]; then
            $(aws s3api head-bucket --bucket $CIRCLE_S3_LAMBDA_BUCKET_NAME);
            if [[ $? == 0 ]]; then
               aws s3 cp *.zip s3://$CIRCLE_S3_LAMBDA_BUCKET_NAME/$CIRCLE_S3_LAMBDA_PREFIX
            else
               echo "bucket does not exist or permission is not there to view it."
            fi
          fi
workflows:
  version: 2
  build-CloudFrontJWTValidator:
    jobs:
      - build
      - aws-cli:
          requires:
            - build
